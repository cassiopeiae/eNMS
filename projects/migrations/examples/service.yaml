- color: pink
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Start point of a workflow
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-01 01:36:02.097383'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Start
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    Iteration Services Test Workflow: ['-359', '-163']
    'Regression Workflow 1: Netmiko with validation and retries': [0, 0]
    'Regression Workflow 2: Separate Failure - Success paths': [-404, 13]
    'Regression Workflow 3: Napalm getters (postprocessing)': [-390, 12]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [-431, -124]
    'Regression Workflow 5: VRF creation and deletion with Napalm': [-611, 2]
    'Regression Workflow 6: Ansible with Validation': [-683, -48]
    'Regression Workflow 7: Payload Extraction & Validation': [-115, -305]
    'Regression Workflow 8: Payload Extraction with Operations': [-661, -226]
    'Regression Workflow 9: Configurations Backup': [-621, 123]
    'Regression Workflow A: get_var, set_var, get_result': [-644, -159]
    'Regression Workflow B: Napalm getters validation': [-604, 9]
    'Regression Workflow C: Advanced multiprocessing': [-407, 115]
    'Regression Workflow D: Prompts': [-279, -158]
    'Regression Workflow E: Iteration Targets': [-491, -78]
    'Regression Workflow F S1: Subworkflow of Workflow': [-418, -147]
    'Regression Workflow F S2: Access Variables from Parent Workflow': [-253, -110]
    'Regression Workflow F: Workflow of Workflows': [-1032, 12]
    Workflow with device and value iteration: [0, 0]
    Workflow with iteration target subworkflows: [-118, 4]
    Workflow with iteration targets: [0, 0]
    iteration_devices_workflow: ['-164', '15']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: pink
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: End point of a workflow
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:22.000682'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: End
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    Iteration Services Test Workflow: ['-9', '294']
    'Regression Workflow 1: Netmiko with validation and retries': [500, 0]
    'Regression Workflow 2: Separate Failure - Success paths': [818, 284]
    'Regression Workflow 3: Napalm getters (postprocessing)': [778, 230]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [-450, 132]
    'Regression Workflow 5: VRF creation and deletion with Napalm': [-623, 83]
    'Regression Workflow 6: Ansible with Validation': [771, -81]
    'Regression Workflow 7: Payload Extraction & Validation': [279, 262]
    'Regression Workflow 8: Payload Extraction with Operations': [-688, -153]
    'Regression Workflow 9: Configurations Backup': [475, 102]
    'Regression Workflow A: get_var, set_var, get_result': [-706, -83]
    'Regression Workflow B: Napalm getters validation': [-600, 63]
    'Regression Workflow C: Advanced multiprocessing': [716, -36]
    'Regression Workflow D: Prompts': [634, 187]
    'Regression Workflow E: Iteration Targets': [-481, -12]
    'Regression Workflow F S1: Subworkflow of Workflow': [-447, 191]
    'Regression Workflow F S2: Access Variables from Parent Workflow': [-274, 112]
    'Regression Workflow F: Workflow of Workflows': [-1057, 316]
    T: !!python/tuple [500, 0]
    TEST: !!python/tuple [500, 0]
    TEST2: !!python/tuple [500, 0]
    Workflow with device and value iteration: [500, 0]
    Workflow with iteration target subworkflows: [617, 0]
    Workflow with iteration targets: [500, 0]
    iteration_devices_workflow: ['651', '20']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Mail notification (service logs)
  device_query: ''
  device_query_property: ip_address
  devices: [Columbus]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 14:38:17.558725'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: mail
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Slack notification (service logs)
  device_query: ''
  device_query_property: ip_address
  devices: [Columbus]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.388262'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: slack_feedback_notification
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Mattermost notification (service logs)
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.428231'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: mattermost_feedback_notification
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Monitor eNMS cluster
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.461232'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: cluster_monitoring
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Push configurations to Git
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-03 16:07:34.697578'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Push Configurations to Git
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 9: Configurations Backup': [120, 83]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: true
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- a_dict: {}
  a_float: 5.0
  a_list: []
  an_integer: 10
  boolean1: true
  boolean2: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  custom_integer: 0
  delete_spaces_before_matching: false
  description: Example
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  exclusion_field: d
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  ip_address: 10.1.1.1
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:16:48.005751'
  mac_address: FF:FF:FF:FF:FF:FF
  mail_address: aaa@gmail.com
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Example Service (does nothing)
  negative_logic: false
  notification_header: ''
  number_in_range: 7
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [741, 106]
    'Regression Workflow C: Advanced multiprocessing': [-403, -174]
  push_to_git: false
  regex: ''
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  string1: cisco
  string2: s2
  time_between_retries: 10
  type: example_service
  url: https://www.google.fr/
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Configure BGP Peering with Napalm
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-13 20:54:58.539660'
  local_as: 100
  loopback: Lo100
  loopback_ip: 100.1.1.1
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: napalm_configure_bgp_1
  negative_logic: false
  neighbor_ip: 100.1.2.1
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow C: Advanced multiprocessing': [147, -169]
  push_to_git: false
  remote_as: 200
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: true
  skip_query: ''
  time_between_retries: 10
  type: configure_bgp_service
  validation_method: none
  vendor: ''
  vrf_name: configure_BGP_test
  waiting_time: 100
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Test the file transfer service
  destination_file: /media/sf_VM/eNMS/tests/file_transfer/b.bin
  device_query: ''
  device_query_property: ip_address
  devices: [Aserver]
  dict_match: {}
  direction: get
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.697251'
  load_known_host_keys: false
  look_for_keys: false
  mail_recipient: ''
  max_processes: 5
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: test_file_transfer_service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  protocol: scp
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_file: /media/sf_VM/eNMS/tests/file_transfer/a.bin
  source_file_includes_globbing: false
  time_between_retries: 10
  type: generic_file_transfer_service
  validation_method: none
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_archive: true
  delete_folder: true
  delete_spaces_before_matching: false
  description: Test the log backup service
  destination_path: /media/sf_VM/eNMS/tests/file_transfer
  device_query: ''
  device_query_property: ip_address
  devices: [Aserver]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:14.001348'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: test_database_backup_service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  protocol: scp
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: database_backup_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  config_mode: false
  configuration_command: show running-config
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Configuration Backup using Netmiko
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-03 16:03:13.301158'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Configuration Backup (Netmiko)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: [Washington]
  positions:
    'Regression Workflow 9: Configurations Backup': [-286, -122]
  push_to_git: false
  regex_pattern_1: ''
  regex_pattern_2: ''
  regex_pattern_3: ''
  regex_replace_1: ''
  regex_replace_2: ''
  regex_replace_3: ''
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 10
  type: netmiko_backup_service
  use_device_driver: true
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Configuration Backup using NAPALM
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-03 16:03:29.843088'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Configuration Backup (NAPALM)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 9: Configurations Backup': [-251, 295]
  push_to_git: false
  regex_pattern_1: ''
  regex_pattern_2: ''
  regex_pattern_3: ''
  regex_replace_1: ''
  regex_replace_2: ''
  regex_replace_3: ''
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: true
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_backup_service
  use_device_driver: true
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  commit_configuration: false
  config_mode: false
  config_mode_command: ''
  content: vrf definition test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Netmiko
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-04 11:01:33.553474'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_create_vrf_test
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [-4, -120]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  strip_command: false
  strip_prompt: false
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  use_device_driver: true
  validation_method: none
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: true
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: test
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is configured
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 09:46:36.865576'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_check_vrf_test
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    Iteration Services Test Workflow: ['147', '-14']
    'Regression Workflow 2: Separate Failure - Success paths': ['84', '-3']
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [445, -37]
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '-50']
    'Regression Workflow A: get_var, set_var, get_result': ['355', '-25']
    iteration_devices_workflow: ['414', '-154']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  commit_configuration: false
  config_mode: false
  config_mode_command: ''
  content: no vrf definition test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Delete VRF "test"
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:18.423301'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_delete_vrf_test
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [476, 119]
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '50']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  strip_command: false
  strip_prompt: false
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  use_device_driver: true
  validation_method: none
  vendor: Arista
  waiting_time: 1
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: test
  content_match_regex: true
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is NOT configured
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin, Columbus]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 09:49:57.713796'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Netmiko: Check VRF (test) does not exist'
  negative_logic: true
  notification_header: ''
  number_of_retries: 2
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [-194, 225]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': [-35, 151]
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '150']
    iteration_devices_workflow: ['337', '-145']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: true
  strip_command: true
  strip_prompt: true
  time_between_retries: 1
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- action: load_merge_candidate
  color: '#D2E5FF'
  content: "vrf definition napalm\r\n"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Napalm
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 13:35:44.715460'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: napalm_create_vrf_test
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 5: VRF creation and deletion with Napalm': [-301, -128]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 10
  type: napalm_configuration_service
  use_device_driver: true
  validation_method: none
  vendor: Arista
  waiting_time: 0
- call_type: GET
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  devices: [Columbus]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  headers: {}
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:15:31.918007'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: 'REST API: call *is_alive* endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  params: {verify: 'false'}
  payload:
    a: b
    c: ['1', '2', '3']
  pools: []
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': [125, 114]
    'Regression Workflow C: Advanced multiprocessing': [391, -27]
    'Regression Workflow D: Prompts': [405, -103]
  push_to_git: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  username: admin
  validation_method: text
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: 'Getter: get_facts'
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  getters: [get_facts]
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:14:48.331142'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'NAPALM: Get Facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [-102, -130]
    'Regression Workflow 3: Napalm getters (postprocessing)': [-154, -70]
    'Regression Workflow A: get_var, set_var, get_result': ['39', '-32']
    'Regression Workflow F: Workflow of Workflows': [3, -51]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: 'Getter: get_interfaces'
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  getters: [get_interfaces]
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:14:58.959163'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'NAPALM: Get interfaces'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 2: Separate Failure - Success paths': [611, -72]
    'Regression Workflow 3: Napalm getters (postprocessing)': [-111, 213]
    'Regression Workflow F: Workflow of Workflows': [-336, 217]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: 'Getter: get_interfaces_ip'
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  getters: [get_interfaces_ip]
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-09-18 19:04:51.055911'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: get_interfaces_ip
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': [221, -78]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
  push_to_git: false
  result_postprocessing: "# Will change the IPv6 of the Management Interface to ::1\r\
    \nresults[\"result\"][\"get_interfaces_ip\"][\"Management1\"][\"ipv6\"] = \"::1\""
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: 'Getter: get_config'
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: eos
  events: []
  getters: [get_config]
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 14:38:04.482568'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: get_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': [531, -9]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Process Payload in example workflow
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 14:38:04.818329'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: process_payload1
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 3: Napalm getters (postprocessing)': [360, 210]
    'Regression Workflow F: Workflow of Workflows': [3, -51]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: swiss_army_knife_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Add devices to the payload
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 22:35:44.181784'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Modify Payload for Iteration
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    Iteration Services Test Workflow: ['3', '-144']
    'Regression Workflow E: Iteration Targets': [-197, -182]
    'Regression Workflow F: Workflow of Workflows': [-789, 25]
    Workflow with iteration target subworkflows: [283, -152]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_code: "# Interfaces 1\r\ntargets = ['Loopback101', 'Loopback15'] if device.name\
    \ == \"Washington\" else ['Loopback9', 'Loopback1000']\r\nset_var('Interfaces\
    \ 1', targets, device=device.name)\r\n\r\n# Derived Devices\r\nset_var(\"Derived\
    \ Devices\", [\"Washington\", \"Austin\"], device=device.name)\r\n\r\n# Interfaces\
    \ 2\r\nset_var('Interfaces 2', ['Loopback333', 'Loopback334'], device=device.name)\r\
    \nsave_result(True, {})"
  time_between_retries: 10
  type: python_snippet_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: payload['variables']['devices']
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:14.896878'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_python_defined_devices
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    Iteration Services Test Workflow: ['-336', '11']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{payload['value']}}
  config_mode: false
  content_match: 255.255.255.255
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 14:05:25.693261'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Iterated_netmiko_service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [216, 129]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: true
  color: '#D2E5FF'
  commands: show ip route
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Show IP route
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 13:42:39.673781'
  mail_recipient: antoine.fourmy@gmail.com
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_show_ip_route
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [49, -207]
  push_to_git: false
  result_postprocessing: ''
  send_notification: true
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Payload Variables Extraction with Regex/TextFSM
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 19:12:55.870709'
  mail_recipient: ''
  match1: ''
  match2: (\d.*)/32
  match3: "Value Filldown PROTOCOL (\\S+\\s\\S+?|\\w?)\r\nValue Filldown NETWORK (\\\
    d+.\\d+.\\d+.\\d+)\r\nValue Filldown MASK (\\d+)\r\nValue DISTANCE (\\d+)\r\n\
    Value METRIC (\\d+)\r\nValue DIRECT (directly)\r\nValue Required NEXT_HOP (connected|\\\
    d+\\.\\d+\\.\\d+\\.\\d+)\r\nValue INTERFACE (\\S+)\r\n\r\nStart\r\n  ^\\s+${PROTOCOL}\\\
    s+${NETWORK}/${MASK}\\s+(?:\\[${DISTANCE}/${METRIC}\\]|is\\s+${DIRECT})(?:.+?)${NEXT_HOP},\\\
    s+${INTERFACE}$$ -> Next.Record"
  match_type1: none
  match_type2: regex
  match_type3: textfsm
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Payload Extraction
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: set
  operation2: set
  operation3: set
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [130, -95]
  push_to_git: false
  query1: get_result("netmiko_show_ip_route", device.name)["success"]
  query2: get_result("netmiko_show_ip_route", device.name)["result"]
  query3: get_result("netmiko_show_ip_route", device=device.name)["result"]
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_extraction_service
  validation_method: none
  variable1: simple_variable
  variable2: regex_variable
  variable3: textfsm_variable
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Payload Validate Dict
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 19:35:35.605726'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Payload Workflow: Validate dict via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [-345, -11]
  push_to_git: false
  query: get_result("Payload Extraction", device.name)["result"]["regex_variable"]
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: dict_included
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Payload Validate Text
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 19:40:24.996346'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Payload Workflow: Validate text via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [-233, 211]
  push_to_git: false
  query: get_result("Payload Extraction", device.name)["result"]["textfsm_variable"]["value"][0][1]
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: eos
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 20:09:49.603685'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: napalm_rollback
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 5: VRF creation and deletion with Napalm': [360, 172]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_rollback_service
  use_device_driver: true
  validation_method: none
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-03 20:31:33.242467'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_check_vrf_napalm
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 5: VRF creation and deletion with Napalm': [340, -110]
    'Regression Workflow A: get_var, set_var, get_result': ['266', '161']
    'Regression Workflow C: Advanced multiprocessing': [123, -187]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-24 20:09:50.574617'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: netmiko_check_no_vrf_napalm
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 5: VRF creation and deletion with Napalm': [-275, 196]
    iteration_devices_workflow: ['245', '32']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("test", device=parent_device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-02 19:52:14.677268'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: true
  name: Device_from_python_query
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    iteration_devices_workflow: ['-5', '-147']
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  command: show vrf a
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: bipbipbop
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-09-18 18:31:59.605812'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 2
  multiprocessing: false
  name: Test Netmiko Prompt Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow D: Prompts': [22, -74]
  push_to_git: false
  response1: show vrf b
  response2: show vrf c
  response3: ''
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  command: show vrf
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: ''
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-19 15:41:59.683776'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Test netmiko prompts pass
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow D: Prompts': [350, 108]
  push_to_git: false
  response1: show vrf
  response2: ''
  response3: ''
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 00:20:05.475732'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Modify payload (no device)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow A: get_var, set_var, get_result': [-376, -138]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_code: "set_var(\"global_variable\", value=1050)\r\nset_var(\"variable\",\
    \ \"variable_in_variables\", section=\"variables\")\r\nsave_result(success=True,\
    \ result={})"
  time_between_retries: 10
  type: python_snippet_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Chicago]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 00:20:10.984436'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Modify payload (per device)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow A: get_var, set_var, get_result': [0, -144]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_code: "set_var(\"variable1\", 999, device=device.name)\r\nset_var(\"variable2\"\
    , \"1000\", device=device.name, section=\"variables\")\r\nset_var(\"iteration_simple\"\
    , \"192.168.105.5\", section=\"pools\")\r\ndevices = [\"Boston\", \"Cincinnati\"\
    ] if device.name == \"Chicago\" else [\"Cleveland\", \"Washington\"]\r\nset_var(\"\
    iteration_device\", devices, section=\"pools\", device=device.name)\r\nsave_result(success=True,\
    \ result={})"
  time_between_retries: 10
  type: python_snippet_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf {{get_var("iteration_simple", section="pools")}}
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("iteration_device", section="pools", device=device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 01:28:59.769392'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Show vrf with payload helper
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow A: get_var, set_var, get_result': [580, -81]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 1
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf test
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("iteration_simple", section="pools")
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-31 13:25:41.095217'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Show vrf with python query
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow A: get_var, set_var, get_result': [609, 92]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf {{get_result("Payload editor, with device")["endtime"]}}
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-03 20:33:15.924993'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: show runtime with get_result helper
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow A: get_var, set_var, get_result': [-445, 128]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match:
    is_alive: {is_alive: true}
  display_only_failed_nodes: false
  driver: eos
  events: []
  getters: [is_alive]
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:37:14.672735'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Getters Workflow: is alive'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow B: Napalm getters validation': [-405, -137]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_equal
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {fqdn: localhost, vendor: Arista}
  display_only_failed_nodes: false
  driver: eos
  events: []
  getters: [get_facts]
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 22:20:19.161043'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Getters Workflow: get facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow B: Napalm getters validation': [18, -122]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match:
    '{{device.ip_address}}': {prefix_length: 24}
  display_only_failed_nodes: false
  driver: eos
  events: []
  getters: [get_interfaces_ip]
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-08 21:45:40.369909'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Getters Workflow: Interface IP'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [-348, -240]
    'Regression Workflow B: Napalm getters validation': [581, 136]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: eos
  events: []
  getters: [get_mac_address_table]
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 23:40:55.348647'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Getters Workflow: MAC address'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow B: Napalm getters validation': [-45, 144]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_equal
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {fqdn: localhost, uptime: '666', vendor: Arista}
  display_only_failed_nodes: false
  driver: eos
  events: []
  getters: [get_facts]
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:40:41.939110'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Getters Workflow: get facts failed match'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  pools: []
  positions:
    'Regression Workflow B: Napalm getters validation': [535, -147]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  use_device_driver: true
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- arguments: ''
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {host: '{{device.ip_address}}', unreachable: 0, use_ssl: true}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-09-18 18:26:58.293827'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 2
  multiprocessing: false
  name: 'Ansible Workflow: Arista show version'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  pass_device_properties: true
  playbook_path: /media/sf_VM/eNMS/playbooks/arista_show_version.yml
  pools: []
  positions:
    'Regression Workflow 6: Ansible with Validation': [-466, 154]
    'Regression Workflow B: Napalm getters validation': [-30, 126]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: ansible_playbook_service
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- arguments: ''
  color: '#D2E5FF'
  content_match: ip address\s.*/32
  content_match_regex: true
  conversion_method: text
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-10 18:26:51.501557'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Ansible Workflow: Arista show configuration (regex match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  pass_device_properties: true
  playbook_path: /media/sf_VM/eNMS/playbooks/arista_show_running_config.yml
  pools: []
  positions:
    'Regression Workflow 6: Ansible with Validation': [179, -62]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: ansible_playbook_service
  validation_method: text
  vendor: ''
  waiting_time: 0
- arguments: ''
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {action: debug, changed: false, failed: false}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-10 18:26:36.791826'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Ansible Workflow: Arista show configuration (dict match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  pass_device_properties: true
  playbook_path: /media/sf_VM/eNMS/playbooks/arista_show_running_config.yml
  pools: []
  positions:
    'Regression Workflow 6: Ansible with Validation': [486, 173]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: ansible_playbook_service
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show version
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-13 20:58:22.190268'
  mail_recipient: ''
  max_processes: 10
  maximum_runs: 1
  multiprocessing: true
  name: Show version with multiprocessing
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow C: Advanced multiprocessing': [120, 129]
    'Regression Workflow F: Workflow of Workflows': [678, 52]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{payload['value']}}
  config_mode: false
  content_match: 255.255.255.255
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  devices: [Austin, Washington]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 14:05:31.377620'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Iterated_netmiko_service bis
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [396, -182]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{get_var('non_default_iteration_value_name')}}
  config_mode: false
  content_match: 255.255.255.255
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  devices: [Austin, Washington]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: '["Loopback11","Loopback15"]'
  iteration_variable_name: non_default_iteration_value_name
  last_modified: '2019-10-04 14:54:34.006032'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Iteration Targets Workflow - Test 1
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [240, -144]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{get_var('iteration_value')}}
  config_mode: false
  content_match: 255.255.255.255
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  devices: [Austin, Washington]
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: get_var('Interfaces 1', device=device.name)
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 14:55:17.403338'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Iteration Target Workflow - Test 2
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [572, -4]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{get_var('iteration_value')}}
  config_mode: false
  content_match: 255.255.255.255
  content_match_regex: false
  conversion_method: text
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  driver: arista_eos
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: true
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=device.name)
  iteration_devices_property: name
  iteration_values: get_var('Interfaces 2', device=device.name)
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 14:56:50.036572'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Iteration Target Workflow - Test 3
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [556, 123]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 3
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: text
  creator: admin
  delete_spaces_before_matching: false
  description: Payload Validate Text
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 19:22:23.906505'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Payload Workflow: Validate text via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [776, 146]
  push_to_git: false
  query: get_var("textfsm_variable", device=device.name)[0][1]
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Payload Validate Dict
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 19:40:32.197054'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Payload Workflow: Validate dict via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow 7: Payload Extraction & Validation': [708, -114]
  push_to_git: false
  query: get_var("regex_variable", device=device.name)
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: text
  vendor: Arista
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:49.512906'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: true
  name: 'Payload Workflow: Add initial variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [118, -243]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_code: "set_var(\"list\", [1, 2], device=device.name)\r\nset_var(\"dict\"\
    , {\"a\": [\"o\", True, 4]}, device=device.name)\r\nsave_result(success=True,\
    \ result={})"
  time_between_retries: 10
  type: python_snippet_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:55.692116'
  mail_recipient: ''
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_processes: 50
  maximum_runs: 1
  multiprocessing: true
  name: 'Payload Workflow: Extraction 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: set
  operation2: append
  operation3: update
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [619, -236]
  push_to_git: false
  query1: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query2: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query3: 'get_result("Getters Workflow: Interface IP", device=device.name)["match"]'
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_extraction_service
  validation_method: none
  variable1: boolean
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:57:00.505853'
  mail_recipient: ''
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_processes: 50
  maximum_runs: 1
  multiprocessing: true
  name: 'Payload Workflow: Extraction 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: append
  operation2: extend
  operation3: update
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [600, 70]
  push_to_git: false
  query1: get_result("Start")["state"]["completed"]
  query2: get_result("Start")["logs"]
  query3: get_result("Start")["state"]
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_extraction_service
  validation_method: none
  variable1: list
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: \[1,2,False,1.*\]
  content_match_regex: true
  conversion_method: text
  creator: admin
  delete_spaces_before_matching: true
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-15 00:09:07.776014'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: true
  name: 'Payload Workflow: Validation 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [62, 62]
  push_to_git: false
  query: get_var("list", device=device.name)
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: text
  vendor: ''
  waiting_time: 0
- color: '#D2E5FF'
  content_match: '{"a": ["o", True, 4], "prefix_length": 24, "failed": 0}'
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-15 00:11:21.018179'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Payload Workflow: Validation 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 8: Payload Extraction with Operations': [-565, 68]
  push_to_git: false
  query: get_var("dict", device=device.name)
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  type: payload_validation_service
  validation_method: dict_included
  vendor: ''
  waiting_time: 0
- call_type: GET
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  headers: {}
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '["Washington", "Atlanta"]'
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 14:56:56.469168'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Iteration Targets Workflow - Test 4
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  params: {}
  payload: {}
  pools: []
  positions:
    'Regression Workflow E: Iteration Targets': [-135, 91]
  push_to_git: false
  rest_url: http://127.0.0.1:5000/rest/instance/device/{{get_var('iteration_value')}}
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  username: admin
  validation_method: text
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 23:09:43.669350'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Variable Access Subworkflow: Access variable from snippet'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S2: Access Variables from Parent Workflow': [240, -101]
    'Regression Workflow F: Workflow of Workflows': [-179, 146]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  source_code: "result = {\r\n \"get_var\": get_var(\"Interfaces 2\", device=device.name),\r\
    \n\"version\": get_result(\"Show interfaces with Netmiko\", device=device.name),\r\
    \n\"napalm\": get_result(\"Regression Workflow 5: VRF creation and deletion with\
    \ Napalm\", device=device.name),\r\n}\r\nsave_result(success=True, result=result)"
  time_between_retries: 10
  type: python_snippet_service
  validation_method: none
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show interface {{get_var('iteration_value')}}
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=device.name)[0]
  iteration_devices_property: name
  iteration_values: 'get_result("NAPALM: Get interfaces", device=device.name)["result"]["get_interfaces"]'
  iteration_variable_name: iteration_value
  last_modified: '2019-10-10 23:22:44.432133'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Variable Access Subworkflow: Access variables for iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S2: Access Variables from Parent Workflow': [244, 113]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Poll configuration and push to gitlab
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3b9c0900-5718-4298-afcc-67bb0a7fb3af:
      content: "This workflow calls netmiko and napalm backup services.\r\nThe devices\
        \ must be defined in the service, not in the workflow."
      positions: [-274, 79]
  last_modified: '2019-10-03 16:08:07.232808'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 9: Configurations Backup'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [200, -205]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Push Configurations to Git, Configuration Backup (NAPALM),
    Configuration Backup (Netmiko)]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Netmiko
  device_query: ''
  device_query_property: ip_address
  devices: [Austin]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    6a9299b5-7ec9-40e8-955d-408344e7ea2e:
      alignment: left
      content: "This service is configured with \"Close connection\".\r\nIt should\
        \ use the same connection as in the previous service, then close it.\r\nExpected\
        \ logs:\r\n- netmiko_check_vrf_test - DEVICE Washington : Using cached Netmiko\
        \ connection\r\n- netmiko_check_vrf_test - DEVICE Washington : Closed netmiko\
        \ connection\r\n"
      positions: [603, -136]
    735baaec-e1f2-4b17-b402-11d8ae7a0d75:
      alignment: left
      content: "This workflow runs on two devices :\r\n- The pool \"Washington\" that\
        \ contains Washington.\r\n- The device \"Austin\".\r\nWashington should reach\
        \ the end and Austin fail at the first step.\r\nAt the end of the workflow,\
        \ the cache connection should be closed.\r\nExpected log:\r\n- Regression\
        \ Workflow 4: VRF creation and deletion with Netmiko - DEVICE Washington :\
        \ Closed netmiko connection"
      positions: [-118, 12]
    a7458a18-4812-498e-857d-b885237a6525:
      alignment: left
      content: "This service is configured with \"Start New Connection\".\r\nIt should\
        \ close the connection opened at the previous service,\r\nand start a new\
        \ one.\r\nExpected Log:\r\n- Netmiko: Check VRF (test) does not exist - DEVICE\
        \ Washington : Closed netmiko connection\r\n- Netmiko: Check VRF (test) does\
        \ not exist - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [-44, 238]
    b5dc9b96-d0bf-4092-8e60-b82ca6db2ad6:
      alignment: left
      content: "This service should automatically detect that there is no\r\nlonger\
        \ a cached connection, and recreate a new one.\r\nExpected log:\r\nnetmiko_delete_vrf_test\
        \ - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [576, 198]
    e6b81854-aece-42bf-9375-bee035a29425:
      alignment: left
      content: "Test:\r\n- with and without multiprocessing\r\n- devices defned as\
        \ a combination of devices and pools.\r\nThe workflow is running on \"Austin\"\
        \ as a device and \"Washington\", as a pool."
      positions: [51, -208]
  last_modified: '2019-10-10 11:22:42.604919'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: 'Regression Workflow 4: VRF creation and deletion with Netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: [Washington]
  positions:
    'Regression Workflow F: Workflow of Workflows': [-423, -31]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, netmiko_create_vrf_test, netmiko_check_vrf_test, netmiko_delete_vrf_test,
    'Netmiko: Check VRF (test) does not exist']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: Arista
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Napalm
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    8108225c-9e1a-4f57-af77-e8076c8641c9:
      alignment: left
      content: "This workflow tests :\r\n- The configuration and rollback mechanism\
        \ with Napalm\r\n- The connection cache mechanism. Both netmiko and napalm\
        \ connections\r\nmust be closed at the end of the workflow"
      positions: [-217, -229]
  last_modified: '2019-10-10 09:44:34.931818'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 5: VRF creation and deletion with Napalm'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow F: Workflow of Workflows': [152, 75]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, napalm_create_vrf_test, napalm_rollback, netmiko_check_vrf_napalm,
    netmiko_check_no_vrf_napalm]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: Arista
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ReST call, Napalm getters, etc
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Atlanta]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    c9ee8980-a972-4ace-a596-03eb2842c4d7:
      content: "In get_interfaces_ip, we test the python post-processing of\r\nthe\
        \ results by setting the IPv6 address of the Mgmt1 interface\r\nto \"::1\""
      positions: [165, -143]
    fa4bd6ec-c736-4b7e-afb0-f4a79b477033:
      alignment: left
      content: "Process payload is a Swiss Army Knife service that uses the results\
        \ of both get_facts\r\nand get_interfaces to compute its success value.\r\n\
        Prerequisite edges are used to ensure the order in which services are run."
      positions: ['356.2877419758313', '267.37324713846346']
  last_modified: '2019-10-01 22:36:20.371507'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 3: Napalm getters (postprocessing)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions:
    'Regression Workflow F: Workflow of Workflows': [464, 224]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'NAPALM: Get Facts', 'NAPALM: Get interfaces', get_interfaces_ip,
    get_config, process_payload1]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: Arista
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Test the payload extraction and validation mechanisms
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0593f20c-240e-4846-b37e-c03bd4630516:
      alignment: left
      content: "After this service, we no longer use the netmiko connection,\r\nso\
        \ we set \"Close connection\" to true for that service.\r\nCheck that when\
        \ running the service, the connection is indeed\r\nclosed after that service.\r\
        \nThe service is configured with notification enabled, to test service\r\n\
        notification INSIDE a workflow."
      positions: [-334, -185]
    20a6a733-4b79-4390-bf2b-ad05dbd6855f:
      alignment: center
      content: "Validate the result with the regex :\r\n(\\d\\.){3}\\d"
      positions: [-262, 273]
    3844a73f-340f-4b7a-9893-50c5b79998d9:
      alignment: center
      content: "Check that the \"textfsm_variable\" in the payload\r\ncan be matched\
        \ with the \"(\\d\\.){3}\\d\" regular expression."
      positions: [794, 255]
    52d15bff-498b-462d-843c-a23199073858:
      alignment: center
      content: "Check that the results contains the dictionary\r\n{\"value\":[\"1.1.1.1\"\
        ,\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [-352, -84]
    55b1e05d-4d84-4227-8774-65cf7ffd992f:
      alignment: center
      content: "Check that the \"regex_variable\" variable\r\nin the payload contains\
        \ the dictionary\r\n{\"value\":[\"1.1.1.1\",\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [743, -198]
    cf55f702-da90-466f-9ee6-9e207a0b4808:
      alignment: left
      content: "This workflow uses netmiko to run a \"show ip route\", and a \"Payload\
        \ Extraction\" service to\r\nextract data with regular expression and TextFSM.\r\
        \nThat extracted information is stored both in the workflow payload and the\
        \ results of the extraction\r\nservice :\r\n- the left side of the workflow\
        \ uses the \"get_result\" method to retrieve the results and validate them.\r\
        \n- the right side uses \"get_var\" to extract data from the payload and validate\
        \ it.\r\nThis workflow is also used to test the RESTART mechanism. It must\
        \ be restarted from both\r\nthe left side (validate via result) and the right\
        \ side (validate via payload) to check that\r\nan older payload / result can\
        \ be retrieved from the database."
      positions: [269, 71]
  last_modified: '2019-10-10 13:53:37.652344'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 7: Payload Extraction & Validation'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [134, -147]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, netmiko_show_ip_route, Payload Extraction, 'Payload Workflow:
      Validate dict via results', 'Payload Workflow: Validate text via results', 'Payload
      Workflow: Validate text via payload', 'Payload Workflow: Validate dict via payload']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Test the inner workflow system
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: true
  events: []
  hidden: false
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    487bfaf5-77af-47a9-ade2-c4b6eaa12304:
      alignment: left
      content: "Runs \"show ip int br\" on a router to get the list of interfaces.\r\
        \nResults will be queried from a subworkflow."
      positions: [-351, -48]
    642dd3af-055b-47d7-bfae-a9713d51da07:
      alignment: left
      content: "Adds per-device loopbacks and derived devices,\r\nto be used for workflow\
        \ iteration and to check that\r\nvariables can be accessed from within a subworkflow."
      positions: [-751, -54]
  last_modified: '2019-10-10 23:20:36.824001'
  mail_recipient: antoine.fourmy@gmail.com
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow F: Workflow of Workflows'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: true
  send_notification_method: mail
  services: [Start, End, 'Regression Workflow 5: VRF creation and deletion with Napalm',
    Modify Payload for Iteration, 'Regression Workflow F S2: Access Variables from
      Parent Workflow', 'Regression Workflow F S1: Subworkflow of Workflow', Show
      interfaces with Netmiko, 'NAPALM: Get interfaces']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: Arista
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: Workflow with separate failure - success path
  device_query: ''
  device_query_property: ip_address
  devices: [Austin, Washington, Baltimore]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    245ebaa6-e452-4c0d-b89e-81acb48bfa6c:
      content: "This workflow runs on 3 devices: one router and 2 dummy devices.\r\
        \nThe router will take the upward path, the dummy devices the downward path.\r\
        \nBoth path rejoin at the end.\r\nTo be tested both with and without multiprocessing."
      positions: [180, 77]
  last_modified: '2019-10-02 10:16:50.403408'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: 'Regression Workflow 2: Separate Failure - Success paths'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'NAPALM: Get Facts', 'REST API: call *is_alive* endpoint',
    'Netmiko: Check VRF (test) does not exist', Example Service (does nothing), 'NAPALM:
      Get interfaces']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    ce7e6857-714e-4102-a65b-ec2d67414866:
      content: "Test of the maximum number of run of a service in a workflow.\r\n\
        For Test Netmiko Prompt Service, it is set to 2: it should run\r\nonce more\
        \ after the REST service.\r\n"
      positions: [145, -168]
  last_modified: '2019-10-04 12:19:35.784496'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow D: Prompts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Test Netmiko Prompt Service, Test netmiko prompts pass, 'REST
      API: call *is_alive* endpoint']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Chicago]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    30b1954f-08d6-4799-a2be-36c5b0a07c4b:
      alignment: left
      content: "This workflow uses \"set_var\" to modify the payload, and get_var\
        \ to\r\nretrieve a variable.\r\nIt also uses \"get_result\" to retrieve the\
        \ result of a previously run job."
      positions: [-92, -34]
    d98b7c19-9d7b-4ddf-bada-2c47e492dbef:
      alignment: left
      content: "Set a variable called \"iteration_device\" that we will use in the\
        \ following service\r\nto define iteration devices.\r\ndevices = [\"Boston\"\
        , \"Cincinnati\"] if device.name == \"Chicago\" else [\"Cleveland\", \"Washington\"\
        ]\r\nset_var(\"iteration_device\", devices, section=\"pools\", device=device.name)"
      positions: [103, -224]
  last_modified: '2019-10-06 20:43:59.635926'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow A: get_var, set_var, get_result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Modify payload (no device), Modify payload (per device),
    Show vrf with payload helper, Show vrf with python query, 'REST API: call *is_alive*
      endpoint', show runtime with get_result helper]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    006272de-91a4-49e0-9b54-9cab6e6f8768:
      alignment: center
      content: "Dictionary Inclusion Validation + Variable substitution :\r\n{\"{{device.ip_address}}\"\
        :{\"prefix_length\":24}}"
      positions: [604, 193]
    187d6918-c286-42d7-a803-e97e05978f3e:
      alignment: center
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"vendor\"\
        :\"Arista\"}"
      positions: [4, -188]
    213083b1-d7f0-4638-98aa-ca097fa10603:
      alignment: left
      content: "Dictionary Equality Validation: {\"is_alive\":{\"is_alive\":true}}\r\
        \nWashington must pass, but Austin will fail (napalm timeout has\r\nbeen brought\
        \ down to 1 to not wait too long).\r\n"
      positions: [-380, -224]
    4d62e069-5dfd-4e6d-b418-8c273a750b06:
      alignment: left
      content: "This workflow is running on two devices: Washington (vEOS) and Austin\
        \ (dummy).\r\nIt uses NAPALM to retrieve data from a device and the validation\
        \ mechanism.\r\nTo be tested with and without multiprocessing."
      positions: [-13, 4]
    a5c335bc-dced-4512-b5bc-1149ea7eec73:
      alignment: left
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"uptime\"\
        :\"666\",\"vendor\":\"Arista\"}\r\nThis service is expected to fail, because\
        \ this uptime is different from 666."
      positions: [584, -212]
    f33d8c65-c691-4aef-ae87-6bcd20a69a11:
      alignment: center
      content: "Test the \"Negative logic\" parameter.\r\nThe validation is set to\
        \ \"Dictionary Equality\" and the match is \r\nan empty dictionary. This shouldn't\
        \ match, but the negative logic\r\nis set to True, so the resulting value\
        \ is a success."
      positions: [-51, 226]
  last_modified: '2019-10-04 10:46:04.750921'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow B: Napalm getters validation'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [678, 11]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'Getters Workflow: is alive', 'Getters Workflow: get facts',
    'Getters Workflow: Interface IP', 'Getters Workflow: MAC address', 'Getters Workflow:
      get facts failed match']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    1dff7d24-0b6b-4524-a07a-26ac67e1ae2c:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\".\r\nConvert the result\
        \ to text and check that the result matches\r\nthe following regular expression:\
        \ \"ip address\\s.*/32\""
      positions: [207, -160]
    36072c59-543f-4600-b2be-f88c366ccb79:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\".\r\nConvert the result\
        \ to a dictionary and check that it\r\ncontains the following dictionary:\r\
        \n{\"action\":\"debug\",\"changed\":false,\"failed\":false}"
      positions: [512, 269]
    813cd109-d252-4731-99b8-7a0828883b6d:
      alignment: left
      content: "Uses Ansible to do a \"show version\".\r\nConvert the result to a\
        \ dictionary (JSON conversion).\r\nCheck that the results contains the following\
        \ dictionary (dict inclusion):\r\n{\"host\":\"{{device.ip_address}}\",\"unreachable\"\
        :0,\"use_ssl\":true}\r\n"
      positions: [-393, 247]
    cb3b0740-411a-4138-a54d-31a133413526:
      alignment: left
      content: "This workflow :\r\n- uses the Ansible Playbook Service to run playbooks\r\
        \n- uses the conversion mechanism to turn the output into a dictionary (JSON\
        \ conversion)\r\n- uses the \"Text with regular expression\" and \"dictionary\
        \ inclusion\" mechanisms to validate the result."
      positions: [-452, -165]
  last_modified: '2019-10-04 15:10:31.893829'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 6: Ansible with Validation'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'Ansible Workflow: Arista show version', 'Ansible Workflow:
      Arista show configuration (regex match)', 'Ansible Workflow: Arista show configuration
      (dict match)']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Jackson, PaloAlto, Austin, Washington, Chicago, SanJose, SanDiego, Dallas,
    Houston, Baltimore, Cleveland, Cincinnati, Minneapolis, Sacramento, SanFrancisco,
    Oakland, Denver]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {mode: LAB}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0844f0e4-7e29-4886-a3ed-178d48ac7317:
      content: "Multiple Entry Points:\r\nStart and Example1"
      positions: [-632, -29]
    72e44a33-e2db-4374-b5f6-6bd72705be1b:
      alignment: left
      content: "This workflow runs on 17 devices with multiprocessing activated (20\
        \ processes).\r\nIt has two entry points: \"Example Service\" and \"Start\"\
        .\r\nWashington is expected to pass the \"show version\" service, but will\r\
        \nstill reach the end through the upward path, so all 17 devices must\r\n\
        reach the \"End\" service."
      positions: ['-130.20166015625', '-31.25']
    d36009d8-ce3a-4ce6-8766-5dc3241d777b:
      content: The service "Napalm configure BGP" is configured to be skipped.
      positions: [146, -232]
  last_modified: '2019-10-04 10:57:27.526699'
  mail_recipient: ''
  max_processes: 20
  maximum_runs: 1
  multiprocessing: true
  name: 'Regression Workflow C: Advanced multiprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Example Service (does nothing), Show version with multiprocessing,
    'REST API: call *is_alive* endpoint', napalm_configure_bgp_1]
  skip: false
  skip_query: ''
  start_services: [Start, Example Service (does nothing)]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington, Austin]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    5043ff9c-79b0-4712-a706-502724ac4e31:
      alignment: left
      content: "The iteration values are set to [\"Loopback11\",\"Loopback15\"] (static),\
        \ and the name\r\nof the iteration variable is set to a non-default value.\r\
        \nThe service does a \"show interface\" over the loopback interfaces."
      positions: ['187.87315331683305', '-224.08512290537783']
    76ece5f4-54f7-4f6b-8ea0-7d2918524e92:
      alignment: left
      content: "This service iterates over a set of values defined\r\nat the first\
        \ step (\"Modify Payload\").\r\nIt uses per-device iteration values.\r\nFor\
        \ Washington, the \"get_var\" function will evaluate to\r\n['Loopback101',\
        \ 'Loopback15'] and Loopback101 does not exist,\r\nso the service will fail.\r\
        \n"
      positions: [720, -125]
    93d396cb-cc7e-47ac-ac12-8f75207dcb14:
      alignment: left
      content: "This service will compute derived targets for Washington: [\"Washington\"\
        , \"Austin\"].\r\nFor each derived device, it will iterate over the \"Interface\
        \ 2\" variable which will\r\nevaluate to ['Loopback333', 'Loopback334'] (set\
        \ in the Modify Payload service).\r\nIn the results, check that it ran for\
        \ both devices and for both interface for each device.\r\n"
      positions: [590, 193]
    b61a926f-87e4-48a6-86bd-74500e9568ab:
      alignment: left
      content: "Set the following variables in the payload :\r\n- Interfaces 1: ['Loopback101',\
        \ 'Loopback15'] for \"Washington\"\r\notherwise ['Loopback9', 'Loopback1000']\r\
        \n- Derived Devices: [\"Washington\", \"Austin\"] for any device\r\n- Interfaces\
        \ 2: ['Loopback333', 'Loopback334'] for any device"
      positions: [-159, -57]
    fbd0224f-eae2-461b-bfc5-9de385e078f0:
      alignment: left
      content: "This service doesn't have targets: it makes a REST call to\r\nhttp://127.0.0.1:5000/rest/instance/device/{{get_var('iteration_value')}}\r\
        \nwith the iteration set to [\"Washington\", \"Atlanta\"].\r\nCredentials\
        \ must be updated after a database drop."
      positions: ['-108.27941396778195', '160.90930755687722']
  last_modified: '2019-10-10 22:44:33.251442'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow E: Iteration Targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Modify Payload for Iteration, Iteration Target Workflow -
      Test 2, Iteration Targets Workflow - Test 1, Iteration Target Workflow - Test
      3, Iteration Targets Workflow - Test 4]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2019-10-02 10:20:38.196859'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 8: Payload Extraction with Operations'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [135, 187]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'Getters Workflow: Interface IP', 'Payload Workflow: Add
      initial variables', 'Payload Workflow: Extraction 1', 'Payload Workflow: Extraction
      2', 'Payload Workflow: Validation 1', 'Payload Workflow: Validation 2']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2019-10-05 10:12:02.348277'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow F S2: Access Variables from Parent Workflow'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F: Workflow of Workflows': [164, 375]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'Variable Access Subworkflow: Access variable from snippet',
    'Variable Access Subworkflow: Access variables for iteration']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2019-10-05 10:07:15.160952'
  mail_recipient: ''
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow F S1: Subworkflow of Workflow'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F: Workflow of Workflows': [-655, 369]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, 'Regression Workflow 8: Payload Extraction with Operations',
    'Regression Workflow B: Napalm getters validation', 'Regression Workflow 7: Payload
      Extraction & Validation']
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- close_connection: false
  color: '#D2E5FF'
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  devices: [Washington]
  dict_match: {}
  display_only_failed_nodes: false
  events: []
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    f865beb3-e097-45f9-917c-184a423d8249:
      alignment: left
      content: "Use Netmiko to run a \"show vrf\".\r\nUse the validation mechanism\
        \ to check for the string \"NOVRF\".\r\nThere is no such VRF configured so\
        \ the service is expected to fail.\r\nRetry twice with 2 seconds between retries."
      positions: [294, -242]
  last_modified: '2019-10-02 10:18:22.321399'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: 'Regression Workflow 1: Netmiko with validation and retries'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions: {}
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  services: [Start, End, Check VRF (NOVRF) exists]
  skip: false
  skip_query: ''
  start_services: [Start]
  time_between_retries: 10
  type: workflow
  validation_method: none
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show vrf
  config_mode: false
  content_match: NOVRF
  content_match_regex: false
  conversion_method: none
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-02 10:17:57.272976'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Check VRF (NOVRF) exists
  negative_logic: false
  notification_header: ''
  number_of_retries: 2
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow 1: Netmiko with validation and retries': [250, -172]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 2
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: text
  vendor: ''
  waiting_time: 0
- auto_find_prompt: true
  close_connection: false
  color: '#D2E5FF'
  commands: show ip int br
  config_mode: false
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credentials: device
  custom_username: ''
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  devices: []
  dict_match: {}
  display_only_failed_nodes: false
  driver: a10
  enable_mode: true
  events: []
  expect_string: ''
  fast_cli: false
  global_delay_factor: 1.0
  hidden: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-05 10:15:25.968061'
  mail_recipient: ''
  max_processes: 50
  maximum_runs: 1
  multiprocessing: false
  name: Show interfaces with Netmiko
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  pools: []
  positions:
    'Regression Workflow F: Workflow of Workflows': [-408, 34]
  push_to_git: false
  result_postprocessing: ''
  send_notification: false
  send_notification_method: mail
  skip: false
  skip_query: ''
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  time_between_retries: 10
  timeout: 10
  type: netmiko_validation_service
  use_device_driver: true
  validation_method: none
  vendor: ''
  waiting_time: 0
